spring:
  application:
    name: smart-order-be-order-management-domain

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5433/midterm-domain2
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver

    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: 5
      minimum-idle: 2
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      pool-name: OrderDomainHikariCP

  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:      
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
    open-in-view: false

  # RabbitMQ Configuration
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest

# JWT Configuration
jwt:
  secret: rSp/kisYeCdda6X8j0HA6jYCcpevXe6LQe3wHTPTC7GP5bQ5gqN15cLkAhtVomGpmT08rSqoyiD1wRxFOGhg8A==
  expiration: 86400000

# Server Configuration
server:
  port: 8082
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
    min-response-size: 1024

# Management Endpoints (Actuator)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      group:
        readiness:
          include: db,diskSpace,ping
  health:
    redis:
      enabled: false
    db:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

# Custom Application Properties
app:
  order:
    max-items-per-order: 100
    auto-cancel-after-minutes: 30
    default-preparation-time: 15

  menu:
    cache-ttl-seconds: 3600
    max-items-per-category: 50

  billing:
    tax-rate: 0.1
    service-charge-rate: 0.05

