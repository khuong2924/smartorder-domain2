spring:
  application:
    name: domain2

  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:midterm-domain2}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:123456}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      pool-name: OrderDomainHikariCP

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:      
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false

  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    
  # Disable Redis auto-configuration
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration

# Kitchen RabbitMQ Configuration
kitchen:
  queue:
    orders: kitchen.order.queue
    order-updates: order.status.updates.queue 
    menu-updates: menu.availability.updates.queue
  exchange:
    orders: restaurant.exchange
  routing-key:
    orders: kitchen.orders
    order-updates: kitchen.order.updates
    menu-updates: kitchen.menu.updates

# JWT Configuration

app:
  jwt:
    secret: ${JWT_SECRET:Z8eVpDYwHm+/UFuzt+PZ3G1U43FTfLTYmgbZq2J5j0VL4nLrYz/tH1Wxht0aQNQmYL9CWxPfx2+p8aWRkPCXXw==}
    expiration: ${JWT_EXPIRATION:86400000}
    
  # Các thuộc tính ứng dụng khác
  order:
    max-items-per-order: 100
    auto-cancel-after-minutes: 30
    default-preparation-time: 15

  menu:
    cache-ttl-seconds: ${MENU_CACHE_TTL_SECONDS:3600}
    max-items-per-category: 50

  billing:
    tax-rate: 0.1
    service-charge-rate: 0.05

# Server Configuration
server:
  port: ${SERVER_PORT:8082}
  servlet:
    context-path: ${SERVER_SERVLET_CONTEXT_PATH:/domain2}
  forward-headers-strategy: framework
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
    min-response-size: 1024

# Management Endpoints (Actuator)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      group:
        readiness:
          include: db,diskSpace,ping
  health:
    redis:
      enabled: false
    db:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

# Pusher Config
pusher:
  app-id: "1974464"
  key: "499d51c77ae90ef82e7b"
  secret: "f36cbaefa6774e2aaa69"
  cluster: "ap1"

